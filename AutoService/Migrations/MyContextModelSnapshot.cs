// <auto-generated />
using System;
using AutoService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoService.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("AutoService.Models.Autoparts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("WarehouseId");

                    b.Property<int>("car_id");

                    b.Property<string>("name");

                    b.Property<double>("price");

                    b.Property<int>("typesautopart_id");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.HasIndex("car_id");

                    b.HasIndex("typesautopart_id");

                    b.ToTable("Autoparts");
                });

            modelBuilder.Entity("AutoService.Models.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("mark");

                    b.Property<string>("model");

                    b.Property<int>("year");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("AutoService.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("autoparts_id");

                    b.Property<int>("client_id");

                    b.Property<DateTime>("date");

                    b.Property<int>("manager_id");

                    b.Property<double>("total");

                    b.HasKey("Id");

                    b.HasIndex("autoparts_id");

                    b.HasIndex("client_id");

                    b.HasIndex("manager_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AutoService.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AutoService.Models.TypesAutopart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("TypesAutopart");
                });

            modelBuilder.Entity("AutoService.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.Property<string>("name");

                    b.Property<string>("phone");

                    b.Property<string>("surname");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AutoService.Models.UsersRoles", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("AutoService.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address");

                    b.Property<int>("count");

                    b.Property<int>("phone");

                    b.HasKey("Id");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("AutoService.Models.Autoparts", b =>
                {
                    b.HasOne("AutoService.Models.Warehouse", "Warehouse")
                        .WithMany("Autoparts")
                        .HasForeignKey("WarehouseId");

                    b.HasOne("AutoService.Models.Cars", "Cars")
                        .WithMany("Autoparts")
                        .HasForeignKey("car_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AutoService.Models.TypesAutopart", "TypesAutopart")
                        .WithMany("Autoparts")
                        .HasForeignKey("typesautopart_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AutoService.Models.Orders", b =>
                {
                    b.HasOne("AutoService.Models.Autoparts", "Autopart")
                        .WithMany("Order")
                        .HasForeignKey("autoparts_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AutoService.Models.Users", "Client")
                        .WithMany("OrdersClient")
                        .HasForeignKey("client_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AutoService.Models.Users", "Manager")
                        .WithMany("OrdersManager")
                        .HasForeignKey("manager_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AutoService.Models.UsersRoles", b =>
                {
                    b.HasOne("AutoService.Models.Roles", "Roles")
                        .WithMany("UsersRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AutoService.Models.Users", "Users")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
